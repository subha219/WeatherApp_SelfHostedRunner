name: Deploy to Local IIS
on:
  push:
    branches:
      - main
jobs:
  build-deploy:
    runs-on: self-hosted   # Your GitHub self-hosted runner (Windows)

    steps:
      # 1. Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Setup .NET Core SDK
      #- name: Setup .NET
       # uses: actions/setup-dotnet@v4
       # with:
         # dotnet-version: '8.0.x'  # change to your version

      # 3. Restore dependencies
      - name: Restore dependencies
        shell: cmd
        run: dotnet restore WeatherAPI.csproj


      # 4. Build project
      - name: Build
        shell: cmd
        run: dotnet build --configuration Release --no-restore

      # 5. Publish project
      - name: Publish
        shell: cmd
        run: dotnet publish -c Release -o ./publish

      # 6. Stop IIS App Pool
      #- name: Stop IIS AppPool
        #shell: powershell
        #run: |
         # Import-Module WebAdministration
         # Stop-WebAppPool -Name "MyApiAppPool" -ErrorAction SilentlyContinue

      # 7. Deploy files to IIS folder
      - name: Deploy to IIS
        run: |          
          $deployPath = "E:\myapi"
          if (Test-Path $deployPath) {
            Remove-Item -Recurse -Force "$deployPath\*"
          } else {
            New-Item -Path $deployPath -ItemType Directory
          }
          Copy-Item -Path "./publish/*" -Destination $deployPath -Recurse
        shell: powershell

      # 8. Start IIS App Pool
      - name: Start IIS AppPool
        run: |
          Import-Module WebAdministration
          Start-WebAppPool -Name "MyApiAppPool"
        shell: cmd